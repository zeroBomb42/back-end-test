generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  userName  String   @unique
  password  String
  createdBy String
  createdAt DateTime @default(now())
  updatedBy String?
  updatedAt DateTime @updatedAt
  email     String   @unique
  authTokens AuthToken[]
}

model AuthToken {
  id        Int       @id @default(autoincrement())
  userId    Int
  token     String    @unique
  expiresAt DateTime
  user      User      @relation(fields: [userId], references: [id])

  @@map("auth_tokens") // optional: map to a table named "auth_tokens" in the database
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  createdBy   String
  createdAt   DateTime @default(now())
  updatedBy   String?
  updatedAt   DateTime @updatedAt
  prices      Price[]
  isDeleted   Boolean  @default(false)
}

model Price {
  id        Int      @id @default(autoincrement())
  amount    Float
  productId Int
  createdBy String
  createdAt DateTime @default(now())
  updatedBy String?
  updatedAt DateTime @updatedAt
  product   Product  @relation(fields: [productId], references: [id])
  isDeleted Boolean  @default(false)
}
